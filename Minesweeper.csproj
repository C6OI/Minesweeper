<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Version>1.1.0</Version>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <!--Avalonia doesen't support TrimMode=link currently,but we are working on that https://github.com/AvaloniaUI/Avalonia/issues/6892 -->
        <TrimMode>copyused</TrimMode>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    </PropertyGroup>
    
    <ItemGroup>
        <AvaloniaResource Include="Assets\**" />
        <None Remove=".gitignore" />
    </ItemGroup>
    
    <ItemGroup>
        <!--This helps with theme dll-s trimming.
        If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
        https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
        <TrimmableAssembly Include="Avalonia.Themes.Fluent" />
        <TrimmableAssembly Include="Avalonia.Themes.Default" />
    </ItemGroup>
    
    <ItemGroup>
        <PackageReference Include="Avalonia" Version="0.10.18" />
        <PackageReference Include="Avalonia.Desktop" Version="0.10.18" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.18" />
        <PackageReference Include="FluentAvaloniaUI" Version="1.4.4" />
        <PackageReference Include="MessageBox.Avalonia" Version="2.1.0" />
        <PackageReference Include="XamlNameReferenceGenerator" Version="1.3.4" />
    </ItemGroup>
    
    <Target Name="WindowsDiscordSDK" Condition="$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))" AfterTargets="AfterBuild">
        <Copy SourceFiles="DiscordGameSDK\Libraries\discord_game_sdk.dll" DestinationFolder="$(OutDir)" />
    </Target>

    <Target Name="LinuxDiscordSDK" Condition="$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))" AfterTargets="AfterBuild">
        <Copy SourceFiles="DiscordGameSDK\Libraries\discord_game_sdk.so" DestinationFolder="$(OutDir)" />
    </Target>

    <Target Name="OSXDiscordSDK" Condition="$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))" AfterTargets="AfterBuild">
        <Copy SourceFiles="DiscordGameSDK\Libraries\discord_game_sdk.dylib" DestinationFolder="$(OutDir)" />
    </Target>
</Project>
